<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.alimzanibekov.ssh</groupId>
        <artifactId>ssh</artifactId>
        <version>1.0.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>console-agent</artifactId>
    <packaging>mvn-golang</packaging> <!-- SIC: packaging must be mvn-golang -->

    <properties>
        <target.name>console-agent</target.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.alimzanibekov.ssh</groupId>
            <artifactId>console-ssh-connector</artifactId>
            <version>1.0.0</version>
            <scope>provided</scope>
            <type>bin</type>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${basedir}${file.separator}src</sourceDirectory>
        <directory>${basedir}${file.separator}target</directory>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <followSymLinks>false</followSymLinks>
                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                    <filesets>
                        <fileset>
                            <directory>${basedir}${file.separator}target</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <!-- https://github.com/raydac/mvn-golang -->
            <!-- https://github.com/raydac/mvn-golang/wiki/PluginConfigParameters -->
            <!-- Compile GO files -->
            <plugin>
                <groupId>com.igormaznitsa</groupId>
                <artifactId>mvn-golang-wrapper</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <useEnvVars>true</useEnvVars>
                    <disableSSLcheck>true</disableSSLcheck>
                    <targetOs>linux</targetOs>
                    <targetArch>amd64</targetArch>
                    <verbose>false</verbose>
                    <command>yacc</command>
                </configuration>
            </plugin>

            <!-- Generate maven artifact -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <id>save-result-as-artifact</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${basedir}${file.separator}target${file.separator}${project.build.finalName}</file>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}</artifactId>
                            <version>${project.version}</version>
                            <!-- NB! packaging allows to select extension  -->
                            <packaging>bin</packaging>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

             <!-- Download console-ssh-connector -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependency</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.alimzanibekov.ssh</groupId>
                                    <artifactId>console-ssh-connector</artifactId>
                                    <version>${project.version}</version>
                                    <type>bin</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${basedir}${file.separator}target</outputDirectory>
                                    <destFileName>console-ssh-connector-${project.version}</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Disable default site plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                    <skipDeploy>true</skipDeploy>
                </configuration>
            </plugin>

            <!-- Copy files from docker directory -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${basedir}${file.separator}docker</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <outputDirectory>${basedir}${file.separator}target</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Build Docker image -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <dependencies>
                    <dependency> <!-- Workaround against 'HK2 service reification failed' with JDK 9+ -->
                        <groupId>javax.activation</groupId>
                        <artifactId>activation</artifactId>
                        <version>1.1.1</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <imageName>${target.name}</imageName>
                    <dockerDirectory>${basedir}${file.separator}target</dockerDirectory>
                    <forceTags>true</forceTags>
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                    </imageTags>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${basedir}${file.separator}target</directory>
                            <include>${target.name}</include>
                        </resource>
                    </resources>
                </configuration>
                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>site</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
